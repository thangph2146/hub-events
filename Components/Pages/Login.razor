@page "/login"
@using hub_events.Services
@using hub_events.Models
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<PageTitle>Đăng nhập</PageTitle>

<div class="row justify-content-center">
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                <h3 class="text-center">Đăng nhập</h3>
            </div>
            <div class="card-body">
                <EditForm Model="loginModel" OnValidSubmit="HandleLogin" FormName="login_form">
                    <DataAnnotationsValidator />
                    
                    @if (!string.IsNullOrEmpty(errorMessage))
                    {
                        <div class="alert alert-danger">
                            @errorMessage
                        </div>
                    }
                    
                    <div class="form-group mb-3">
                        <label for="email">Email</label>
                        <InputText id="email" @bind-Value="loginModel.Email" class="form-control" />
                        <ValidationMessage For="@(() => loginModel.Email)" />
                    </div>

                    <div class="form-group mb-3">
                        <label for="password">Mật khẩu</label>
                        <InputText id="password" @bind-Value="loginModel.Password" type="password" class="form-control" />
                        <ValidationMessage For="@(() => loginModel.Password)" />
                    </div>

                    <div class="form-check mb-3">
                        <InputCheckbox id="rememberMe" @bind-Value="loginModel.RememberMe" class="form-check-input" />
                        <label class="form-check-label" for="rememberMe">Ghi nhớ đăng nhập</label>
                    </div>

                    <div class="text-center">
                        <button type="submit" class="btn btn-primary" disabled="@isLoading">
                            @if (isLoading)
                            {
                                <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                                <span>Đang xử lý...</span>
                            }
                            else
                            {
                                <span>Đăng nhập</span>
                            }
                        </button>
                    </div>
                </EditForm>
            </div>
            <div class="card-footer text-center">
                <p>Chưa có tài khoản? <a href="/register">Đăng ký</a></p>
            </div>
        </div>
    </div>
</div>

@code {
    private LoginModel loginModel = new();
    private bool isLoading = false;
    private string? errorMessage;

    private async Task HandleLogin()
    {
        isLoading = true;
        
        try
        {
            var success = await AuthService.LoginAsync(loginModel);
            
            if (success)
            {
                // Đăng nhập thành công - chuyển hướng đến trang chủ
                NavigationManager.NavigateTo("/");
            }
            else
            {
                // Đăng nhập thất bại - nhận thông báo lỗi từ service
                errorMessage = await AuthService.GetErrorMessageAsync();
            }
        }
        finally
        {
            isLoading = false;
        }
    }
} 